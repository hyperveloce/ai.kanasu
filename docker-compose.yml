version: "3.8"

services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - /mnt/debian.data/open-webui_data:/app/backend/data
    depends_on:
      - ollama
    ports:
      - "3000:8080" # UI on 3000
    environment:
      - "OLLAMA_BASE_URL=http://ollama:11434"
      - "WEBUI_SECRET_KEY="
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - app_network

  # localai:
  #   image: localai/localai:latest
  #   container_name: localai
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - DEBUG=true
  #     - MODELS_PATH=/models
  #   volumes:
  #     - /mnt/debian.data/localai_models:/models
  #     - /mnt/debian.data/localai_data:/data
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 0
  #             capabilities: [gpu]
  #   networks:
  #     - app_network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    command: ["serve"] # Array syntax for clarity
    ports:
      - "11434:11434"
    environment:
      - MODEL_NAME=llama3:8b
      - MODEL_NAME=7b-instruct-v0.2-q5_K_M
      - OLLAMA_CONTEXT_WINDOW=4096 # Increased from your current 2048
      - OLLAMA_MODEL_PATH=/models # Store models in a specific directory
      - OLLAMA_HOST=0.0.0.0 # Bind to all interfaces
      - OLLAMA_TEMPERATURE=0.7
      - OLLAMA_REPEAT_PENALTY=1.1
    volumes:
      - /mnt/debian.data/ollama_data:/root/.ollama
      - /mnt/debian.data/ollama_models:/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 0
              capabilities: [gpu]
    networks:
      - app_network

volumes:
  ollama_data:
    name: ollama_data

networks:
  app_network:
    driver: bridge
